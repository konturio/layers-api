plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id "io.freefair.lombok" version "6.3.0"
}

group = 'io.kontur'
version = '1.6.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.locationtech.jts.io:jts-io-common:1.18.2'
    implementation 'org.wololo:jts2geojson:0.17.0'
    implementation 'org.liquibase:liquibase-core:4.11.0'

    //health
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.9.0'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:postgresql:1.17.2'
    testImplementation 'com.jayway.jsonpath:json-path-assert:2.7.0'
    testImplementation 'org.hamcrest:hamcrest-core:2.2'
}

test {
    useJUnitPlatform()
    maxHeapSize = "512m"
    finalizedBy("jacocoTestReport")
    systemProperty 'spring.profiles.active', 'test-run'
}

jacocoTestReport {
    reports {
        csv.enabled true
        csv.destination file("${buildDir}/jacoco.csv")
    }
}

jar {
    enabled = false
}