---
variables:
  MAVEN_CLI_OPTS: '--batch-mode'
  MAVEN_OPTS: '-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository'

.default-job-settings:
  tags:
    - java

stages:
  - build
  - deploy

build:
  extends: .default-job-settings
  stage: build
  script:
    - ln -svf /usr/local/jdk-17/bin/* /usr/bin/
    - |-
      set -x
      for t in check build; do
          sh gradlew --console plain "$t" \
            || { \
                  tar --show-transformed-names --transform="s@^build/reports/tests/test@test_report@" -cvf - build/reports/tests/test/* | xz -1 > test-report-${CI_COMMIT_REF_SLUG}.tar.xz; \
                  sh gradlew --console plain --info "$t"; \
                  exit 1; \
               }
      done
      set +x
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' build/jacoco.csv
    - >-
      tar --show-transformed-names
      --transform="s@^build/libs/@@;s@^build/resources/main/external/@@;"
      -cvf - build/libs/*.jar build/resources/main/external/*
      | xz -1 > layers-api-${CI_COMMIT_REF_SLUG}.tar.xz
  artifacts:
    when: always
    name: layers-api-$CI_COMMIT_REF_SLUG
    paths:
      - '*.tar.xz'
    reports:
      junit: build/test-results/test/**/TEST-*.xml

deploy-docker-image:
  tags:
    - kontur
    - docker
    - java
  stage: deploy
  script:
    - tar -xvf $(find $CI_PROJECT_DIR -maxdepth 1 -name layers-api\*.tar.xz -print -quit)
    - mkdir -p dependency && (cd dependency; jar -xf ../*.jar)
    - docker build --build-arg DEPENDENCY=dependency -t nexus.kontur.io:8085/konturdev/layers-api:0.0.1-SNAPSHOT .
    - docker push nexus.kontur.io:8085/konturdev/layers-api:0.0.1-SNAPSHOT
  when: manual
  dependencies:
  - build

deploy-dev:
  tags:
    - kontur
    - ansible
  stage: deploy
  script: >
    ansible-playbook -vD -e "version=$CI_COMMIT_REF_SLUG-$CI_PIPELINE_IID
    path_to_dist=$(find $CI_PROJECT_DIR -maxdepth 1 -name layers-api\*.tar.xz -print -quit)"
    --limit=zigzag_layers_api ansible/deploy.yml
  environment:
    name: DEV
    url: 'https://test-api02.konturlabs.com/layers/v2/'
  when: manual
  dependencies:
    - build

deploy-test:
  tags:
    - kontur
    - ansible
  stage: deploy
  script: >
    ansible-playbook -vD -e "version=$CI_COMMIT_REF_SLUG-$CI_PIPELINE_IID
    path_to_dist=$(find $CI_PROJECT_DIR -maxdepth 1 -name layers-api\*.tar.xz -print -quit)"
    --limit=sonic_layers_api ansible/deploy.yml
  environment:
    name: TEST
    url: 'https://test-api.konturlabs.com/layers/v2/'
  when: manual
  dependencies:
    - build

deploy-prod:
  tags:
    - kontur
    - ansible
  stage: deploy
  script: >
    ansible-playbook -vD -e "version=$CI_COMMIT_REF_SLUG-$CI_PIPELINE_IID
    path_to_dist=$(find $CI_PROJECT_DIR -maxdepth 1 -name layers-api\*.tar.xz -print -quit)"
    --limit=lima_layers_api ansible/deploy.yml
  environment:
    name: PROD
    url: 'https://api.kontur.io/layers/v2/'
  only:
    - /^release-.*$/
  when: manual
  dependencies:
    - build
